// –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–æ—Ä–º—ã, –∫–∞–∫ —Ä–∞–Ω—å—à–µ
function collectFormData() {
    const get = (id) => document.getElementById(id)?.value.trim() || '';
    const getPlaceholder = (placeholder) => document.querySelector(`input[placeholder="${placeholder}"]`)?.value.trim() || '';
    const getByClass = (selector) => document.querySelector(selector)?.value.trim() || '0';

    const startDate = get('startDate');
    const endDate = get('endDate');
    const reminderDate = get('reminderDate');

    return {
        clientName: get('clientName'),
        phone: get('phone'),
        address: getPlaceholder('–£–ª–∏—Ü–∞, ‚Ññ-–¥–æ–º–∞ '),
        carNumber: get('car-number-input'),
        tireCount: get('tireCount'),
        hasDisk: get('hasDisk'),
        sezon: get('seZon'),
        orderCode: get('order'),
        cellCode: getPlaceholder('E-45'),
        additionalNotes: get('qrContent'),
        storageDuration: get('storage'),
        monthlyPrice: get('monthlyPrice'),
        totalPrice: get('totalPrice'),
        debt: getByClass('.info-row .value.debt .editable'),
        contractNumber: get('contractNumber'),
        trafficSource: get('trafficSource'),
        startDate,
        endDate,
        reminderDate,
        formattedStartDate: startDate ? new Date(startDate).toLocaleDateString('ru-RU') : '–ù–µ —É–∫–∞–∑–∞–Ω–∞',
        formattedEndDate: endDate ? new Date(endDate).toLocaleDateString('ru-RU') : '–ù–µ —É–∫–∞–∑–∞–Ω–∞',
        formattedReminderDate: reminderDate ? new Date(reminderDate).toLocaleDateString('ru-RU') : '–ù–µ —É–∫–∞–∑–∞–Ω–∞'
    };
}

function formatTelegramMessage(data) {
    return `
‚ù±‚ù±‚ù±‚ù±‚ù± ‚úÖ –ö–õ–ò–ï–ù–¢ Otelshin.tu ‚úÖ ‚ù∞‚ù∞‚ù∞‚ù∞‚ù∞\n------------------------------------------\n<b> ${data.clientName || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'} </b>\nüìû ${data.phone || '–ù–µ —É–∫–∞–∑–∞–Ω'}\nüöó –ù–æ–º–µ—Ä –ê–≤—Ç–æ:<b>  ${data.carNumber || '–ù–µ —É–∫–∞–∑–∞–Ω'}</b>\nüìç <b>–ê–¥—Ä–µ—Å:</b> <code> ${data.address || '–ù–µ —É–∫–∞–∑–∞–Ω'} </code>\n--- ---- ---- ---- ------ ---- ---- ---- ---\n-    -    -     <b>–î–ï–¢–ï–õ–ò –£–°–õ–£–ì–ò</b>    -    -    -\n--- ---- ---- ---- ------ ---- ---- ---- ---\n<blockquote>‚≠ïÔ∏è ${data.additionalNotes || '–ù–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–º–µ—Ç–æ–∫.'}\n–ö–æ–ª-–≤–æ —à–∏–Ω: <b>${data.tireCount || '0'} —à—Ç.</b> –°–µ–∑–æ–Ω: <b>${data.sezon || '–ù–µ —É–∫–∞–∑–∞–Ω'}</b>\nüõû <b>–î–∏—Å–∫–∏:</b> ${data.hasDisk || '–ù–µ—Ç'} </blockquote>\n--- ---- ---- ---- ------ ---- ---- ---- ---\n<blockquote>üì¶ <b>–°–∫–ª–∞–¥:</b> ${data.orderCode || '–ù–µ —É–∫–∞–∑–∞–Ω'}\n‚ö°Ô∏è –•—Ä–∞–Ω–µ–Ω–∏–µ: <b>${data.storageDuration || '0'} –º–µ—Å.</b> ‚ù± ${data.formattedStartDate} ‚ûΩ ${data.formattedEndDate}\nüîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ–± –æ–∫–æ–Ω—á–∞–Ω–∏–∏ —Å—Ä–æ–∫–∞:<b> ${data.formattedReminderDate}</b></blockquote>\n--- ---- ---- ---- ------ ---- ---- ---- ---\n<blockquote>üí≥–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞: <b>${data.totalPrice || '0'} ‚ÇΩ</b> [${data.monthlyPrice || '0'} ‚ÇΩ/–º–µ—Å.]\nüö® <b>–î–æ–ª–≥:</b> ${data.debt || '0'} ‚ÇΩ</blockquote>\n------------------------------------------\nüåê <i>–ò—Å—Ç–æ—á–Ω–∏–∫:</i> <span class="tg-spoiler"> ${data.trafficSource || '–ù–µ —É–∫–∞–∑–∞–Ω'} </span>\n‚ù±‚ù±‚ù± –î–æ–≥–æ–≤–æ—Ä: <b>${data.contractNumber || '–ù–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω'}</b> <a href="https://otelshin.ru">–Ω–∞ —Å–∞–π—Ç–µ</a> ‚ù∞‚ù∞‚ù∞`;
}

function sendFormSecurely() {
    const data = collectFormData();
    const fullPayload = {
        ...data,
        message: formatTelegramMessage(data)
    };

    fetch('https://tzkehqpiyzddzvnwxhez.supabase.co/functions/v1/send-form', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(fullPayload)
    })
    .then(res => res.json())
    .then(res => {
        if (res.success) {
            alert('–£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram –∏ Google –¢–∞–±–ª–∏—Ü—É!');
        } else {
            alert('–û—à–∏–±–∫–∞: ' + res.error);
            console.error('–û—à–∏–±–∫–∞:', res);
        }
    })
    .catch(err => {
        alert('–°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å.');
        console.error(err);
    });
}

// –ü—Ä–∏–≤—è–∑–∫–∞ –∫ –∫–Ω–æ–ø–∫–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è
window.onload = () => {
    const sendButton = document.querySelector('.action-button');
    if (sendButton) {
        sendButton.addEventListener('click', sendFormSecurely);
    }
};
