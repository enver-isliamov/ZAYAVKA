const telegramBotToken = "7134836219:AAFOKRDl_f7_nft2Q52UxXFx244Gpqs7DPs";
const chatId = "96609347";

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Google Sheets
const SPREADSHEET_ID = '1IBBn38ZD-TOgzO9VjYAyKz8mchg_RwWyD6kZ0Lu729A';
const SHEET_NAME = '–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç—ã';
const API_KEY = 'AIzaSyCfufjRxEecMLqO8MGsODu1tXYSjmhUHJU';
const CLIENT_ID = '613236074236-938866s3a34k53fik0dq6rsiurk36t8h.apps.googleusercontent.com';

function calculateTotal() {
    const monthlyPrice = document.getElementById('monthlyPrice').value;
    const tireCount = document.getElementById('tireCount').value;
    const totalPrice = monthlyPrice * tireCount;
    document.getElementById('totalPrice').value = totalPrice;
}

function generateContractNumber() {
    const currentDate = new Date();
    const year = currentDate.getFullYear().toString().slice(-2);
    const month = String(currentDate.getMonth() + 1).padStart(2, '0');
    const day = String(currentDate.getDate()).padStart(2, '0');
    const hour = String(currentDate.getHours()).padStart(2, '0');
    return `${year}${month}${day}${hour}`;
}

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã
const today = new Date();
const formattedDate = today.toISOString().split('T')[0];
document.getElementById('startDate').value = formattedDate;

function calculateDate() {
    const tireCount = parseInt(document.getElementById('tireCount').value);
    const startDate = new Date(document.getElementById('startDate').value);
    const endDate = new Date(startDate);
    endDate.setMonth(startDate.getMonth() + tireCount);
    document.getElementById('endDate').value = endDate.toISOString().split('T')[0];

    const reminderDate = new Date(endDate);
    reminderDate.setDate(endDate.getDate() - 7);
    document.getElementById('reminderDate').value = reminderDate.toISOString().split('T')[0];
}

window.onload = calculateDate;
document.getElementById('tireCount').addEventListener('input', calculateDate);

// –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è Google API
async function authenticate() {
    return gapi.client.init({
        apiKey: API_KEY,
        clientId: CLIENT_ID,
        scope: 'https://www.googleapis.com/auth/spreadsheets'
    });
}

// –ü–æ–∏—Å–∫ –∫–ª–∏–µ–Ω—Ç–∞ –≤ —Ç–∞–±–ª–∏—Ü–µ
async function findClient(phone) {
    const response = await gapi.client.sheets.spreadsheets.values.get({
        spreadsheetId: SPREADSHEET_ID,
        range: `${SHEET_NAME}!A:B`
    });

    const rows = response.result.values || [];
    for (let i = 0; i < rows.length; i++) {
        if (rows[i][1] === phone) {
            return i + 1; // 1-based index
        }
    }
    return -1; // –ö–ª–∏–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞
async function updateClient(row, data) {
    const range = `${SHEET_NAME}!A${row}:O${row}`;
    const values = [[
        data.name, data.phone, data.totalPrice, data.monthlyPrice, data.tireCount,
        data.hasDisk, data.sezon, data.order, data.size || '', data.condition || '',
        data.startDate, data.endDate, data.reminderDate, data.contractNumber,
        data.storage
    ]];

    await gapi.client.sheets.spreadsheets.values.update({
        spreadsheetId: SPREADSHEET_ID,
        range: range,
        valueInputOption: 'RAW',
        resource: { values }
    });
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞
async function addClient(data) {
    const values = [[
        data.name, data.phone, data.totalPrice, data.monthlyPrice, data.tireCount,
        data.hasDisk, data.sezon, data.order, data.size || '', data.condition || '',
        data.startDate, data.endDate, data.reminderDate, data.contractNumber,
        data.storage
    ]];

    await gapi.client.sheets.spreadsheets.values.append({
        spreadsheetId: SPREADSHEET_ID,
        range: SHEET_NAME,
        valueInputOption: 'RAW',
        resource: { values }
    });
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö
async function sendToTelegramAndSheets() {
    const clientName = document.getElementById('clientName').value;
    const phone = document.getElementById('phone').value;
    const order = document.getElementById('order').value;
    const monthlyPrice = document.getElementById('monthlyPrice').value;
    const tireCount = document.getElementById('tireCount').value;
    const hasDisk = document.getElementById('hasDisk').value;
    const startDate = document.getElementById('startDate').value;
    const endDate = document.getElementById('endDate').value;
    const reminderDate = document.getElementById('reminderDate').value;
    const storage = document.getElementById('storage').value;
    const sezon = document.getElementById('seZon').value;
    const totalPrice = document.getElementById('totalPrice').value;
    const contractNumber = document.getElementById('contractNumber').value || generateContractNumber();
    const trafficSource = document.getElementById('trafficSource').value;

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è Telegram
    const message = `
${clientName} ${phone}
üí≥ –°—É–º–º–∞ –∑–∞–∫–∞–∑–∞: ${totalPrice}‚ÇΩ [${monthlyPrice}‚ÇΩ/–º–µ—Å.]
üõû: ${tireCount}—à—Ç.‚ù±‚ù±${hasDisk}‚ù±‚ù± [${sezon}]
–ú–∞—Ä–∫–∞:‚ù±‚ù± ${order} ¬∑ ¬∑ 
üóì–•—Ä–∞–Ω–µ–Ω–∏–µ: ‚ù±${startDate} ‚ûΩ ${endDate}
---------------
‚òéÔ∏è –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ–± –æ–∫–æ–Ω—á–∞–Ω–∏–∏ —Å—Ä–æ–∫–∞: ${reminderDate}
---------------
–î–æ–≥–æ–≤–æ—Ä: ${contractNumber} (–Ω–∞ —Å–∞–π—Ç–µ Otelshin.tu) | –°–∫–ª–∞–¥: ${storage}
`;

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram
    const telegramUrl = `https://api.telegram.org/bot${telegramBotToken}/sendMessage`;
    await fetch(telegramUrl, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
            chat_id: chatId,
            text: message
        })
    }).then(response => response.json())
      .then(data => console.log('–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram:', data))
      .catch(error => console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:', error));

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Google Sheets
    try {
        await new Promise((resolve) => gapi.load('client', resolve));
        await authenticate();

        const clientData = {
            name: clientName,
            phone: phone,
            totalPrice: totalPrice,
            monthlyPrice: monthlyPrice,
            tireCount: tireCount,
            hasDisk: hasDisk,
            sezon: sezon,
            order: order,
            startDate: startDate,
            endDate: endDate,
            reminderDate: reminderDate,
            contractNumber: contractNumber,
            storage: storage
        };

        const clientRow = await findClient(phone);
        if (clientRow !== -1) {
            await updateClient(clientRow, clientData);
            console.log('–î–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –≤ Google Sheets');
        } else {
            await addClient(clientData);
            console.log('–ù–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ Google Sheets');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å Google Sheets:', error);
    }
}

// –ü—Ä–∏–≤—è–∑–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –∫ –∫–Ω–æ–ø–∫–µ (–ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∞ —Å id="submit")
document.getElementById('submit')?.addEventListener('click', sendToTelegramAndSheets);
