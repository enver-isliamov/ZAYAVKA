// –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–∏ –≤ —á–∞—Ç —Å –∞–¥–º–∏–Ω–æ–º  —á–µ—Ä–µ–∑ –±–æ—Ç - ZAYAVKA - 
const telegramBotToken = "7134836219:AAFOKRDl_f7_nft2Q52UxXFx244Gpqs7DPs"; 
const chatId = "96609347";

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –æ–±—â–µ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏
function calculateTotal() {
    const monthlyPrice = document.getElementById('monthlyPrice').value;
    const tireCount = document.getElementById('tireCount').value;
    const totalPrice = monthlyPrice * tireCount;
    document.getElementById('totalPrice').value = totalPrice;
    generateQRCode();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–æ–º–µ—Ä–∞ –¥–æ–≥–æ–≤–æ—Ä–∞
function generateContractNumber() {
    const currentDate = new Date();
    const year = currentDate.getFullYear().toString().slice(-2); // –ü–æ—Å–ª–µ–¥–Ω–∏–µ 2 —Ü–∏—Ñ—Ä—ã –≥–æ–¥–∞
    const month = String(currentDate.getMonth() + 1).padStart(2, '0'); // –ú–µ—Å—è—Ü —Å –≤–µ–¥—É—â–∏–º –Ω—É–ª–µ–º
    const day = String(currentDate.getDate()).padStart(2, '0'); // –î–µ–Ω—å —Å –≤–µ–¥—É—â–∏–º –Ω—É–ª–µ–º
    const hour = String(currentDate.getHours()).padStart(2, '0'); // –ß–∞—Å—ã —Å –≤–µ–¥—É—â–∏–º –Ω—É–ª–µ–º
    const minute = String(currentDate.getMinutes()).padStart(2, '0'); // –ú–∏–Ω—É—Ç—ã —Å –≤–µ–¥—É—â–∏–º –Ω—É–ª–µ–º
    return `${year}.${month}.${day}-${hour}${minute}`; // –§–æ—Ä–º–∞—Ç: –ì–ì.–ú–ú.–î–î-–ß–ß–ú–ú
}

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É
const today = new Date();
const formattedDate = today.toISOString().split('T')[0];
document.getElementById('startDate').value = formattedDate;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –¥–∞—Ç
function calculateDate() {
    const tireCount = parseInt(document.getElementById('tireCount').value);
    const startDate = new Date(document.getElementById('startDate').value);
    const endDate = new Date(startDate);
    endDate.setMonth(startDate.getMonth() + tireCount);
    document.getElementById('endDate').value = endDate.toISOString().split('T')[0];

    const reminderDate = new Date(endDate);
    reminderDate.setDate(endDate.getDate() - 7);
    document.getElementById('reminderDate').value = reminderDate.toISOString().split('T')[0];
    generateQRCode();
}


// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö –≤ Telegram
function sendToTelegram() {
    const clientName = document.getElementById('clientName').value;
    const phone = document.getElementById('phone').value;
    const order = document.getElementById('order').value;
    const monthlyPrice = document.getElementById('monthlyPrice').value;
    const tireCount = document.getElementById('tireCount').value;
    const hasDisk = document.getElementById('hasDisk').value;
    const startDate = document.getElementById('startDate').value;
    const endDate = document.getElementById('endDate').value;
    const reminderDate = document.getElementById('reminderDate').value;
    const storage = document.getElementById('storage').value;
    const sezon = document.getElementById('seZon').value;
    const totalPrice = document.getElementById('totalPrice').value;
    const contractNumber = document.getElementById('contractNumber').value;
    const trafficSource = document.getElementById('trafficSource').value;

    const message = `
‚ù±‚ù±‚ù±‚ù±‚ù± ‚úÖ –ö–õ–ò–ï–ù–¢ Otelshin.tu ‚úÖ ‚ù∞‚ù∞‚ù∞‚ù∞‚ù∞

${clientName} 
üìû${phone}

–ú–∞—Ä–∫–∞:‚ù±‚ù± ${order}
‚≠ï: ‚ù±‚ù± ${hasDisk} ‚ù±‚ù± [${sezon}]

‚ö°–•—Ä–∞–Ω–µ–Ω–∏–µ: [${tireCount}–º–µ—Å. ‚ù± ${startDate} ‚ûΩ ${endDate}
---------------
üí≥ –°—É–º–º–∞ –∑–∞–∫–∞–∑–∞: ${totalPrice} ${monthlyPrice}—Ä/–º–µ—Å.]
‚òéÔ∏è –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ–± –æ–∫–æ–Ω—á–∞–Ω–∏–∏ —Å—Ä–æ–∫–∞: ${reminderDate} üìû
---------------
–î–æ–≥–æ–≤–æ—Ä: ${contractNumber} (–Ω–∞ —Å–∞–π—Ç–µ Otelshin.tu) | –°–∫–ª–∞–¥: ${storage}
–ò—Å—Ç–æ—á–Ω–∏–∫ —Ç—Ä–∞—Ñ–∏–∫–∞: ${trafficSource}
    `;

    // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π canvas –¥–ª—è QR-–∫–æ–¥–∞ –±–æ–ª—å—à–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞
    const tempQrCanvas = document.createElement('canvas');
    tempQrCanvas.width = 500;
    tempQrCanvas.height = 500;

    const vCardData = `
BEGIN:VCARD
VERSION:3.0
N:${clientName};;;;
FN:${clientName}
TEL:${phone}
NOTE:${message.replace(/\n/g, '\\n')}
END:VCARD
    `.trim();

    QRCode.toCanvas(tempQrCanvas, vCardData, { width: 500 }, (error) => {
        if (error) {
            console.error("–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ QR-–∫–æ–¥–∞:", error);
            return;
        }

        const dataURL = tempQrCanvas.toDataURL('image/png');
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram
        sendImageWithCaption(dataURL, message)
            .then(() => {
                // –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É
                updateGoogleSheet(clientName, phone, order, hasDisk, sezon, 
                    tireCount, startDate, endDate, totalPrice, monthlyPrice, 
                    reminderDate, contractNumber, storage, trafficSource);
            })
            .catch(error => {
                console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:', error);
                alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ QR-–∫–æ–¥–∞ –≤ Telegram.');
            });
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –ø–æ–¥–ø–∏—Å—å—é –≤ Telegram
async function sendImageWithCaption(dataURL, caption) {
    return fetch(dataURL)
        .then(res => res.blob())
        .then(blob => {
            const formData = new FormData();
            formData.append('chat_id', chatId); // –í–ê–ñ–ù–û: –ø–æ–¥—Å—Ç–∞–≤–∏—Ç—å –≤–∞—à chat_id
            formData.append('photo', blob, 'qrcode.png');
            formData.append('caption', caption);

            return fetch(`https://api.telegram.org/bot${telegramBotToken}/sendPhoto`, { // –í–ê–ñ–ù–û: –ø–æ–¥—Å—Ç–∞–≤–∏—Ç—å –≤–∞—à bot token
                method: 'POST',
                body: formData
            });
        })
        .then(response => response.json())
        .then(data => {
            if (data.ok) {
                alert('QR-–∫–æ–¥ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Telegram!');
                return true;
            } else {
                alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ QR-–∫–æ–¥–∞ –≤ Telegram: ' + data.description);
                return false;
            }
        })
        .catch(error => {
            console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:', error);
            alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ QR-–∫–æ–¥–∞ –≤ Telegram.');
            return false;
        });
}

/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞ –≤ —Ç–∞–±–ª–∏—Ü–µ Google Sheets.
 * –†–∞–±–æ—Ç–∞–µ—Ç —Å –ª–∏—Å—Ç–æ–º "WebBase" –∏ –∫–æ–ª–æ–Ω–∫–∞–º–∏ (–≤ —Ç–æ—á–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ):
 * Chat ID, –ò–º—è –∫–ª–∏–µ–Ω—Ç–∞, –¢–µ–ª–µ—Ñ–æ–Ω, –ù–æ–º–µ—Ä –ê–≤—Ç–æ, –ó–∞–∫–∞–∑ - QR, –¶–µ–Ω–∞ –∑–∞ –º–µ—Å—è—Ü,
 * –ö–æ–ª-–≤–æ —à–∏–Ω, –ù–∞–ª–∏—á–∏–µ –¥–∏—Å–∫–æ–≤, –ù–∞—á–∞–ª–æ, –°—Ä–æ–∫, –ù–∞–ø–æ–º–Ω–∏—Ç—å, –û–∫–æ–Ω—á–∞–Ω–∏–µ,
 * –°–∫–ª–∞–¥ —Ö—Ä–∞–Ω–µ–Ω–∏—è, –Ø—á–µ–π–∫–∞, –û–±—â–∞—è —Å—É–º–º–∞, –î–æ–ª–≥, –î–æ–≥–æ–≤–æ—Ä, –ê–¥—Ä–µ—Å –∫–ª–∏–µ–Ω—Ç–∞,
 * –°—Ç–∞—Ç—É—Å —Å–¥–µ–ª–∫–∏, –ò—Å—Ç–æ—á–Ω–∏–∫ —Ç—Ä–∞—Ñ–∏–∫–∞
 * 
 * –í—Ö–æ–¥–Ω–æ–π –æ–±—ä–µ–∫—Ç clientData –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –ø–æ–ª—è.
 * Chat ID –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –ø—É—Å—Ç—ã–º –∏–ª–∏ —Å –∫–∞–∫–∏–º-—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º, –µ—Å–ª–∏ –µ—Å—Ç—å.
 */

async function updateGoogleSheet(clientData) {
    const SHEET_ID = '1QwNDSkkpDp1kBW9H1C3v1gdvlrHc2OS4WR8HVOXZKh0';
    const API_KEY = 'AIzaSyBWBa0hhrcGx6rESZeLCXZ7-73U4lJAR0E';
    const SHEET_NAME = 'WebBase';

    try {
        // 1) –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ª–∏—Å—Ç–∞, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –∫–ª–∏–µ–Ω—Ç–∞ (—Å—Ç—Ä–æ–∫–∏ —Å 2 –∏ –Ω–∏–∂–µ)
        const getResponse = await fetch(
            `https://sheets.googleapis.com/v4/spreadsheets/${SHEET_ID}/values/${SHEET_NAME}!A2:T1000?key=${API_KEY}`
        );
        const sheetData = await getResponse.json();

        let rowIndex = -1; // –∏–Ω–¥–µ–∫—Å —Å—Ç—Ä–æ–∫–∏, –µ—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω

        if (sheetData.values) {
            for (let i = 0; i < sheetData.values.length; i++) {
                const row = sheetData.values[i];
                // –ò–º–µ–Ω–∞ –∫–ª–∏–µ–Ω—Ç–∞ (–∫–æ–ª–æ–Ω–∫–∞ B, –∏–Ω–¥–µ–∫—Å 1) –∏ –¢–µ–ª–µ—Ñ–æ–Ω (–∫–æ–ª–æ–Ω–∫–∞ C, –∏–Ω–¥–µ–∫—Å 2)
                const nameInRow = row[1] || '';
                const phoneInRow = row[2] || '';

                if (nameInRow === clientData.clientName && phoneInRow === clientData.phone) {
                    rowIndex = i + 2; // +2, —Ç.–∫. –¥–∞–Ω–Ω—ã–µ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å A2
                    break;
                }
            }
        }

        // 2) –§–æ—Ä–º–∏—Ä—É–µ–º –º–∞—Å—Å–∏–≤ –∑–Ω–∞—á–µ–Ω–∏–π –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ —Ç–∞–±–ª–∏—Ü—É
        // –í–∞–∂–Ω–æ: –ö–æ–ª–æ–Ω–∫–∏ A-T (20 –∫–æ–ª–æ–Ω–æ–∫), –∑–∞–ø–æ–ª–Ω—è–µ–º –≤ —Ç–æ—á–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
        // –ï—Å–ª–∏ –∫–∞–∫–∏—Ö-—Ç–æ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç ‚Äî —Å—Ç–∞–≤–∏–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É ''
        const values = [
            clientData.chatId || '',            // Chat ID ‚Äî –∫–æ–ª–æ–Ω–∫–∞ A (0)
            clientData.clientName || '',       // –ò–º—è –∫–ª–∏–µ–Ω—Ç–∞ ‚Äî B (1)
            clientData.phone || '',            // –¢–µ–ª–µ—Ñ–æ–Ω ‚Äî C (2)
            clientData.carNumber || '',        // –ù–æ–º–µ—Ä –ê–≤—Ç–æ ‚Äî D (3)
            clientData.orderQR || '',          // –ó–∞–∫–∞–∑ - QR ‚Äî E (4)
            clientData.monthlyPrice || '',     // –¶–µ–Ω–∞ –∑–∞ –º–µ—Å—è—Ü ‚Äî F (5)
            clientData.tireCount || '',        // –ö–æ–ª-–≤–æ —à–∏–Ω ‚Äî G (6)
            clientData.hasDisk || '',          // –ù–∞–ª–∏—á–∏–µ –¥–∏—Å–∫–æ–≤ ‚Äî H (7)
            clientData.startDate || '',        // –ù–∞—á–∞–ª–æ ‚Äî I (8)
            clientData.term || '',             // –°—Ä–æ–∫ ‚Äî J (9)
            clientData.reminderDate || '',     // –ù–∞–ø–æ–º–Ω–∏—Ç—å ‚Äî K (10)
            clientData.endDate || '',          // –û–∫–æ–Ω—á–∞–Ω–∏–µ ‚Äî L (11)
            clientData.storage || '',          // –°–∫–ª–∞–¥ —Ö—Ä–∞–Ω–µ–Ω–∏—è ‚Äî M (12)
            clientData.cell || '',             // –Ø—á–µ–π–∫–∞ ‚Äî N (13)
            clientData.totalPrice || '',       // –û–±—â–∞—è —Å—É–º–º–∞ ‚Äî O (14)
            clientData.debt || '',             // –î–æ–ª–≥ ‚Äî P (15)
            clientData.contractNumber || '',   // –î–æ–≥–æ–≤–æ—Ä ‚Äî Q (16)
            clientData.clientAddress || '',    // –ê–¥—Ä–µ—Å –∫–ª–∏–µ–Ω—Ç–∞ ‚Äî R (17)
            clientData.dealStatus || '',       // –°—Ç–∞—Ç—É—Å —Å–¥–µ–ª–∫–∏ ‚Äî S (18)
            clientData.trafficSource || ''     // –ò—Å—Ç–æ—á–Ω–∏–∫ —Ç—Ä–∞—Ñ–∏–∫–∞ ‚Äî T (19)
        ];

        if (rowIndex > 0) {
            // 3–∞) –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∑–∞–ø–∏—Å—å –ø–æ –Ω–∞–π–¥–µ–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
            const updateRange = `${SHEET_NAME}!A${rowIndex}:T${rowIndex}`; // 20 –∫–æ–ª–æ–Ω–æ–∫ A-T

            const updateResponse = await fetch(
                `https://sheets.googleapis.com/v4/spreadsheets/${SHEET_ID}/values/${encodeURIComponent(updateRange)}?valueInputOption=USER_ENTERED&key=${API_KEY}`,
                {
                    method: 'PUT',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        range: updateRange,
                        majorDimension: 'ROWS',
                        values: [values]
                    })
                }
            );

            if (updateResponse.ok) {
                console.log(`–î–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞ "${clientData.clientName}" –æ–±–Ω–æ–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ.`);
            } else {
                console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö:', await updateResponse.text());
            }
        } else {
            // 3–±) –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü—É
            const appendRange = `${SHEET_NAME}!A2:T2`; // –≤—Å—Ç–∞–≤–∫–∞ –≤ –∫–æ–ª–æ–Ω–∫–∏ A-T –Ω–∞—á–∏–Ω–∞—è —Å–æ —Å—Ç—Ä–æ–∫–∏ 2

            const appendResponse = await fetch(
                `https://sheets.googleapis.com/v4/spreadsheets/${SHEET_ID}/values/${encodeURIComponent(appendRange)}:append?valueInputOption=USER_ENTERED&insertDataOption=INSERT_ROWS&key=${API_KEY}`,
                {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ values: [values] })
                }
            );

            if (appendResponse.ok) {
                console.log(`–ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å –∫–ª–∏–µ–Ω—Ç–∞ "${clientData.clientName}" –¥–æ–±–∞–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ.`);
            } else {
                console.error('–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏:', await appendResponse.text());
            }
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å Google Sheets API:', error);
        alert('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ API-–∫–ª—é—á –∏ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞.');
    }
}



// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
window.onload = () => {
    calculateDate();
    generateQRCode();

    const inputs = document.querySelectorAll('input, select');
    inputs.forEach(input => {
        input.addEventListener('input', generateQRCode);
        input.addEventListener('change', generateQRCode);
    });

    document.getElementById('showQrContent').addEventListener('click', () => {
        const qrContent = document.getElementById('qrContent');
        qrContent.style.display = qrContent.style.display === 'none' ? 'block' : 'none';
    });
};

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
document.getElementById('tireCount').addEventListener('input', calculateDate);
document.getElementById('monthlyPrice').addEventListener('change', calculateTotal);
document.getElementById('startDate').addEventListener('change', calculateDate);
