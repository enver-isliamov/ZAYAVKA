const telegramBotToken = "7134836219:AAFOKRDl_f7_nft2Q52UxXFx244Gpqs7DPs";
const chatId = "96609347";

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Google Sheets
const SPREADSHEET_ID = '1IBBn38ZD-TOgzO9VjYAyKz8mchg_RwWyD6kZ0Lu729A';
const SHEET_NAME = '–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç—ã';
const API_KEY = 'AIzaSyCfufjRxEecMLqO8MGsODu1tXYSjmhUHJU';
const CLIENT_ID = '613236074236-938866s3a34k53fik0dq6rsiurk36t8h.apps.googleusercontent.com';

function calculateTotal() {
    const monthlyPrice = document.getElementById('monthlyPrice').value;
    const tireCount = document.getElementById('tireCount').value;
    const totalPrice = monthlyPrice * tireCount;
    document.getElementById('totalPrice').value = totalPrice;
}

function generateContractNumber() {
    const currentDate = new Date();
    const year = currentDate.getFullYear().toString().slice(-2);
    const month = String(currentDate.getMonth() + 1).padStart(2, '0');
    const day = String(currentDate.getDate()).padStart(2, '0');
    const hour = String(currentDate.getHours()).padStart(2, '0');
    const contractNumber = `${year}${month}${day}${hour}`;
    return contractNumber;
}

// –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É
const today = new Date();
// –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM-DD
const formattedDate = today.toISOString().split('T')[0];
// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –≤ input
document.getElementById('startDate').value = formattedDate;

// –ü–æ–¥—Å—á–µ—Ç –¥–∞—Ç
function calculateDate() {
    // –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—è—Ü–µ–≤
    const tireCount = parseInt(document.getElementById('tireCount').value);
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞
    const startDate = new Date(document.getElementById('startDate').value);
    // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞ –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—è—Ü–µ–≤
    const endDate = new Date(startDate);
    endDate.setMonth(startDate.getMonth() + tireCount);
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø–æ–ª–µ "–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è"
    document.getElementById('endDate').value = endDate.toISOString().split('T')[0];

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞—Ç—É –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –Ω–∞ 7 –¥–Ω–µ–π —Ä–∞–Ω—å—à–µ "–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è"
    const reminderDate = new Date(endDate);
    reminderDate.setDate(endDate.getDate() - 7);
    document.getElementById('reminderDate').value = reminderDate.toISOString().split('T')[0];
}

// –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∑–Ω–∞—á–µ–Ω–∏–π
window.onload = calculateDate;

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è input –¥–ª—è tireCount
document.getElementById('tireCount').addEventListener('input', calculateDate);

// –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è Google API
async function authenticate() {
    try {
        console.log('–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Google API...');
        await gapi.client.init({
            apiKey: API_KEY,
            clientId: CLIENT_ID,
            scope: 'https://www.googleapis.com/auth/spreadsheets'
        });
        console.log('Google API —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ Google API:', error);
        throw error;
    }
}

// –ü–æ–∏—Å–∫ –∫–ª–∏–µ–Ω—Ç–∞ –≤ —Ç–∞–±–ª–∏—Ü–µ
async function findClient(phone) {
    try {
        console.log(`–ü–æ–∏—Å–∫ –∫–ª–∏–µ–Ω—Ç–∞ —Å —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º: ${phone}`);
        const response = await gapi.client.sheets.spreadsheets.values.get({
            spreadsheetId: SPREADSHEET_ID,
            range: `${SHEET_NAME}!A:B`
        });
        const rows = response.result.values || [];
        for (let i = 0; i < rows.length; i++) {
            if (rows[i][1] === phone) {
                console.log(`–ö–ª–∏–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω –≤ —Å—Ç—Ä–æ–∫–µ ${i + 1}`);
                return i + 1;
            }
        }
        console.log('–ö–ª–∏–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return -1;
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∫–ª–∏–µ–Ω—Ç–∞:', error);
        throw error;
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞
async function updateClient(row, data) {
    try {
        console.log(`–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞ –≤ —Å—Ç—Ä–æ–∫–µ ${row}`);
        const range = `${SHEET_NAME}!A${row}:O${row}`;
        const values = [[
            data.name, data.phone, data.totalPrice, data.monthlyPrice, data.tireCount,
            data.hasDisk, data.sezon, data.order, data.size || '', data.condition || '',
            data.startDate, data.endDate, data.reminderDate, data.contractNumber,
            data.storage
        ]];
        await gapi.client.sheets.spreadsheets.values.update({
            spreadsheetId: SPREADSHEET_ID,
            range: range,
            valueInputOption: 'RAW',
            resource: { values }
        });
        console.log('–î–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã');
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞:', error);
        throw error;
    }
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞
async function addClient(data) {
    try {
        console.log('–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞');
        const values = [[
            data.name, data.phone, data.totalPrice, data.monthlyPrice, data.tireCount,
            data.hasDisk, data.sezon, data.order, data.size || '', data.condition || '',
            data.startDate, data.endDate, data.reminderDate, data.contractNumber,
            data.storage
        ]];
        await gapi.client.sheets.spreadsheets.values.append({
            spreadsheetId: SPREADSHEET_ID,
            range: SHEET_NAME,
            valueInputOption: 'RAW',
            resource: { values }
        });
        console.log('–ù–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω');
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞:', error);
        throw error;
    }
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö
async function sendToTelegramAndSheets() {
    const clientName = document.getElementById('clientName').value;
    const phone = document.getElementById('phone').value;
    const order = document.getElementById('order').value;
    const monthlyPrice = document.getElementById('monthlyPrice').value;
    const tireCount = document.getElementById('tireCount').value;
    const hasDisk = document.getElementById('hasDisk').value;
    const startDate = document.getElementById('startDate').value;
    const endDate = document.getElementById('endDate').value;
    const reminderDate = document.getElementById('reminderDate').value;
    const storage = document.getElementById('storage').value;
    const sezon = document.getElementById('seZon').value;
    const totalPrice = document.getElementById('totalPrice').value;
    const contractNumber = document.getElementById('contractNumber').value || generateContractNumber();

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è Telegram
    const message = `
${clientName} ${phone}
üí≥ –°—É–º–º–∞ –∑–∞–∫–∞–∑–∞: ${totalPrice}‚ÇΩ [${monthlyPrice}‚ÇΩ/–º–µ—Å.]
üõû: ${tireCount}—à—Ç.‚ù±‚ù±${hasDisk}‚ù±‚ù± [${sezon}]
–ú–∞—Ä–∫–∞:‚ù±‚ù± ${order} ¬∑ ¬∑ 
üóì–•—Ä–∞–Ω–µ–Ω–∏–µ: ‚ù±${startDate} ‚ûΩ ${endDate}
---------------
‚òéÔ∏è –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ–± –æ–∫–æ–Ω—á–∞–Ω–∏–∏ —Å—Ä–æ–∫–∞: ${reminderDate}
---------------
–î–æ–≥–æ–≤–æ—Ä: ${contractNumber} (–Ω–∞ —Å–∞–π—Ç–µ Otelshin.tu) | –°–∫–ª–∞–¥: ${storage}
`;

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram
    try {
        console.log('–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram...');
        const telegramUrl = `https://api.telegram.org/bot${telegramBotToken}/sendMessage`;
        const telegramResponse = await fetch(telegramUrl, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
                chat_id: chatId,
                text: message
            })
        });
        const telegramData = await telegramResponse.json();
        if (telegramData.ok) {
            console.log('–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram:', telegramData);
        } else {
            console.error('–û—à–∏–±–∫–∞ Telegram API:', telegramData);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram:', error);
    }

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Google Sheets
    try {
        console.log('–ó–∞–≥—Ä—É–∑–∫–∞ Google API...');
        await new Promise((resolve) => gapi.load('client', resolve));
        await authenticate();

        const clientData = {
            name: clientName,
            phone: phone,
            totalPrice: totalPrice,
            monthlyPrice: monthlyPrice,
            tireCount: tireCount,
            hasDisk: hasDisk,
            sezon: sezon,
            order: order,
            startDate: startDate,
            endDate: endDate,
            reminderDate: reminderDate,
            contractNumber: contractNumber,
            storage: storage
        };

        const clientRow = await findClient(phone);
        if (clientRow !== -1) {
            await updateClient(clientRow, clientData);
        } else {
            await addClient(clientData);
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å Google Sheets:', error);
    }
}

// –ü—Ä–∏–≤—è–∑–∫–∞ –∫ –∫–Ω–æ–ø–∫–µ
document.getElementById('submit')?.addEventListener('click', sendToTelegramAndSheets);
