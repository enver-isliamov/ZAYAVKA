const telegramBotToken = "7134836219:AAFOKRDl_f7_nft2Q52UxXFx244Gpqs7DPs";
const chatId = "96609347";

function calculateTotal() {
    const monthlyPrice = document.getElementById('monthlyPrice').value;
    const tireCount = document.getElementById('tireCount').value;
    const totalPrice = monthlyPrice * tireCount;
    document.getElementById('totalPrice').value = totalPrice;
}

function generateContractNumber() {
    const currentDate = new Date();
    const year = currentDate.getFullYear().toString().slice(-2);
    const month = String(currentDate.getMonth() + 1).padStart(2, '0');
    const day = String(currentDate.getDate()).padStart(2, '0');
    const hour = String(currentDate.getHours()).padStart(2, '0');
    const contractNumber = `${year}${month}${day}${hour}`;
    return contractNumber;
}

// –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É
const today = new Date();
// –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY-MM-DD
const formattedDate = today.toISOString().split('T')[0];
// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –≤ input
document.getElementById('startDate').value = formattedDate;

//***** –ü–û–î–°–ß–ï–¢ –î–ê–¢ ***** //
function calculateDate() {
    // –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—è—Ü–µ–≤
    const tireCount = parseInt(document.getElementById('tireCount').value);
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞
    const startDate = new Date(document.getElementById('startDate').value);
    // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞ –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–µ—Å—è—Ü–µ–≤
    const endDate = new Date(startDate);
    endDate.setMonth(startDate.getMonth() + tireCount);
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ø–æ–ª–µ "–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è"
    document.getElementById('endDate').value = endDate.toISOString().split('T')[0];

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–∞—Ç—É –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –Ω–∞ 7 –¥–Ω–µ–π —Ä–∞–Ω—å—à–µ "–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è"
    const reminderDate = new Date(endDate);
    reminderDate.setDate(endDate.getDate() - 7);
    document.getElementById('reminderDate').value = reminderDate.toISOString().split('T')[0];
}

// –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∑–Ω–∞—á–µ–Ω–∏–π
window.onload = calculateDate;

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è input –¥–ª—è tireCount
document.getElementById('tireCount').addEventListener('input', calculateDate);

function sendToTelegram() {
    const clientName = document.getElementById('clientName').value;
    const phone = document.getElementById('phone').value;
    const order = document.getElementById('order').value;
    const monthlyPrice = document.getElementById('monthlyPrice').value;
    const tireCount = document.getElementById('tireCount').value;
    const hasDisk = document.getElementById('hasDisk').value;
    const startDate = document.getElementById('startDate').value;
    const endDate = document.getElementById('endDate').value;
    const reminderDate = document.getElementById('reminderDate').value;
    const storage = document.getElementById('storage').value;
    const sezon = document.getElementById('seZon').value;
    const totalPrice = document.getElementById('totalPrice').value;
    const contractNumber = document.getElementById('contractNumber').value;
    const trafficSource = document.getElementById('trafficSource').value;

    // –ü–æ–ª—É—á–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ canvas
    const canvas = document.getElementById('canvas');
    const dataURL = canvas.toDataURL('image/png');

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    const message = `
‚ù±‚ù±‚ù±‚ù±‚ù± ‚úÖ –ö–õ–ò–ï–ù–¢ Otelshin.tu ‚úÖ ‚ù∞‚ù∞‚ù∞‚ù∞‚ù∞

${clientName} ${phone}
üõû: ${tireCount}—à—Ç.‚ù±‚ù±${hasDisk} ‚ù±‚ù± [${sezon}]
–ú–∞—Ä–∫–∞:‚ù±‚ù± ${order}

üóì–•—Ä–∞–Ω–µ–Ω–∏–µ: ‚ù±${startDate} ‚ûΩ ${endDate}
---------------
üí≥ –°—É–º–º–∞ –∑–∞–∫–∞–∑–∞: ${totalPrice} [${monthlyPrice}–º–µ—Å.]
‚òéÔ∏è –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ–± –æ–∫–æ–Ω—á–∞–Ω–∏–∏ —Å—Ä–æ–∫–∞: ${reminderDate} üìû
---------------
–î–æ–≥–æ–≤–æ—Ä: ${contractNumber} (–Ω–∞ —Å–∞–π—Ç–µ Otelshin.tu) | –°–∫–ª–∞–¥: ${storage}
–ò—Å—Ç–æ—á–Ω–∏–∫ —Ç—Ä–∞—Ñ–∏–∫–∞: ${trafficSource}
    `;

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º –≤ –∫–∞—á–µ—Å—Ç–≤–µ –æ–ø–∏—Å–∞–Ω–∏—è
    sendImageWithCaption(dataURL, message);
}

function sendImageWithCaption(dataURL, caption) {
    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ Blob
    fetch(dataURL)
        .then(res => res.blob())
        .then(blob => {
            const formData = new FormData();
            formData.append('chat_id', chatId);
            formData.append('photo', blob, 'signature.png');
            formData.append('caption', caption); // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –≤ –∫–∞—á–µ—Å—Ç–≤–µ –æ–ø–∏—Å–∞–Ω–∏—è

            return fetch(`https://api.telegram.org/bot${telegramBotToken}/sendPhoto`, {
                method: 'POST',
                body: formData
            });
        })
        .then(response => response.json())
        .then(data => {
            if (data.ok) {
                alert('–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram!');
            } else {
                alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –≤ Telegram.');
            }
        })
        .catch(error => {
            console.error('–û—à–∏–±–∫–∞:', error);
            alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –≤ Telegram.');
        });
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–ø–∏–∏ –Ω–∞ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
const phoneNumber = document.getElementById('phone').value;
const smsMessage = `
–£–≤–∞–∂–∞–µ–º—ã–π ${clientName}, –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –±—ã–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ Telegram:
–ó–∞–∫–∞–∑: ${order}
–¶–µ–Ω–∞ –∑–∞ –º–µ—Å—è—Ü: ${monthlyPrice}
–ö–æ–ª-–≤–æ —à–∏–Ω: ${tireCount}
–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞: ${totalPrice}
`;
// –ó–¥–µ—Å—å –Ω—É–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ª–æ–≥–∏–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏ SMS-—Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –Ω–æ–º–µ—Ä
console.log(`SMS-—Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –Ω–æ–º–µ—Ä ${phoneNumber}: ${smsMessage}`);

// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–º–µ—Ä –¥–æ–≥–æ–≤–æ—Ä–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.getElementById('contractNumber').value = generateContractNumber();

//–ü–û–î–ü–ò–°–¨ ///////////////
const canvas = document.getElementById('canvas');
const ctx = canvas.getContext('2d');
let drawing = false;

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã canvas
canvas.width = document.getElementById('signature-pad').clientWidth;
canvas.height = document.getElementById('signature-pad').clientHeight;

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∏–ª–µ–π —Ä–∏—Å–æ–≤–∞–Ω–∏—è
ctx.strokeStyle = "#000"; // –¶–≤–µ—Ç –ª–∏–Ω–∏–∏
ctx.lineWidth = 2; // –®–∏—Ä–∏–Ω–∞ –ª–∏–Ω–∏–∏

// –ù–∞—á–∞–ª–æ —Ä–∏—Å–æ–≤–∞–Ω–∏—è
function startDrawing(e) {
    drawing = true;
    ctx.beginPath();
    ctx.moveTo(getX(e), getY(e));
}

// –†–∏—Å–æ–≤–∞–Ω–∏–µ
function draw(e) {
    if (drawing) {
        ctx.lineTo(getX(e), getY(e));
        ctx.stroke();
    }
}

// –û–∫–æ–Ω—á–∞–Ω–∏–µ —Ä–∏—Å–æ–≤–∞–Ω–∏—è
function stopDrawing() {
    drawing = false;
    ctx.closePath();
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç X
function getX(e) {
    return e.offsetX !== undefined ? e.offsetX : e.touches[0].clientX - canvas.getBoundingClientRect().left;
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç Y
function getY(e) {
    return e.offsetY !== undefined ? e.offsetY : e.touches[0].clientY - canvas.getBoundingClientRect().top;
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –º—ã—à–∏
canvas.addEventListener('mousedown', startDrawing);
canvas.addEventListener('mousemove', draw);
canvas.addEventListener('mouseup', stopDrawing);

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –∫–∞—Å–∞–Ω–∏—è –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
canvas.addEventListener('touchstart', startDrawing);
canvas.addEventListener('touchmove', draw);
canvas.addEventListener('touchend', stopDrawing);

// –û—á–∏—Å—Ç–∫–∞ canvas
document.getElementById('clear').addEventListener('click', () => {
    ctx.clearRect(0, 0, canvas.width, canvas.height);
});
//–ü–û–î–ü–ò–°–¨ <-- ///////////////


// --------------------------- –¢–ï–°–¢–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø –û–ë–ù–û–í–õ–ï–ù–ò–ï –î–ê–ù–ù–´–• –ö–ª–∏–µ–Ω—Ç–∞ --------
// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ - –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–∏ –∑–Ω–∞—á–µ–Ω–∏—è
const SPREADSHEET_ID = '1IBBn38ZD-TOgzO9VjYAyKz8mchg_RwWyD6kZ0Lu729A'; // ID –≤–∞—à–µ–π Google —Ç–∞–±–ª–∏—Ü—ã
const SHEET_NAME = '–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç—ã'; // –ù–∞–∑–≤–∞–Ω–∏–µ –ª–∏—Å—Ç–∞
const API_KEY = 'AIzaSyCfufjRxEecMLqO8MGsODu1tXYSjmhUHJU'; // API –∫–ª—é—á Google
const CLIENT_ID = '613236074236-938866s3a34k53fik0dq6rsiurk36t8h.apps.googleusercontent.com'; // Client ID –∏–∑ Google Cloud Console

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è Telegram
function parseOrderData(message) {
    const data = {
        name: message.match(/^[^\n]+/)[0].split(' +')[0],
        phone: message.match(/\+7 \(\d{3}\) \d{3}-\d{2}-\d{2}/)[0],
        amount: message.match(/–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞: (\d+)‚ÇΩ/)[1],
        amountPerMonth: message.match(/\[(\d+)‚ÇΩ\/–º–µ—Å\.\]/)[1],
        quantity: message.match(/üõû: (\d+)—à—Ç\./)[1],
        disks: message.match(/‚ù±‚ù±(.+?) ‚ù±‚ù±/)[1],
        season: message.match(/\[(.+?)\]/)[1],
        brand: message.match(/–ú–∞—Ä–∫–∞:‚ù±‚ù± (.+?) ¬∑/)[1],
        size: message.match(/¬∑ (.+?) ¬∑/)[1],
        condition: message.match(/¬∑ (.+?)$/m)[1],
        storageStart: message.match(/üóì–•—Ä–∞–Ω–µ–Ω–∏–µ: ‚ù±(.+?) ‚ûΩ/)[1],
        storageEnd: message.match(/‚ûΩ (.+?)$/m)[1],
        reminder: message.match(/–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ–± –æ–∫–æ–Ω—á–∞–Ω–∏–∏ —Å—Ä–æ–∫–∞: (.+?)$/m)[1],
        contract: message.match(/–î–æ–≥–æ–≤–æ—Ä: (\d+)/)[1],
        storageLocation: message.match(/–°–∫–ª–∞–¥: (.+?)$/)[1]
    };
    return data;
}

// –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è Google API
async function authenticate() {
    return gapi.client.init({
        apiKey: API_KEY,
        clientId: CLIENT_ID,
        scope: 'https://www.googleapis.com/auth/spreadsheets'
    });
}

// –ü–æ–∏—Å–∫ –∫–ª–∏–µ–Ω—Ç–∞ –≤ —Ç–∞–±–ª–∏—Ü–µ
async function findClient(phone) {
    const response = await gapi.client.sheets.spreadsheets.values.get({
        spreadsheetId: SPREADSHEET_ID,
        range: `${SHEET_NAME}!A:B` // –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ —Ç–µ–ª–µ—Ñ–æ–Ω –≤–æ –≤—Ç–æ—Ä–æ–π –∫–æ–ª–æ–Ω–∫–µ
    });

    const rows = response.result.values || [];
    for (let i = 0; i < rows.length; i++) {
        if (rows[i][1] === phone) {
            return i + 1; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–æ–º–µ—Ä —Å—Ç—Ä–æ–∫–∏ (1-based)
        }
    }
    return -1; // –ö–ª–∏–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞
async function updateClient(row, data) {
    const range = `${SHEET_NAME}!A${row}:O${row}`;
    const values = [[
        data.name, data.phone, data.amount, data.amountPerMonth, data.quantity,
        data.disks, data.season, data.brand, data.size, data.condition,
        data.storageStart, data.storageEnd, data.reminder, data.contract,
        data.storageLocation
    ]];

    await gapi.client.sheets.spreadsheets.values.update({
        spreadsheetId: SPREADSHEET_ID,
        range: range,
        valueInputOption: 'RAW',
        resource: { values }
    });
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞
async function addClient(data) {
    const values = [[
        data.name, data.phone, data.amount, data.amountPerMonth, data.quantity,
        data.disks, data.season, data.brand, data.size, data.condition,
        data.storageStart, data.storageEnd, data.reminder, data.contract,
        data.storageLocation
    ]];

    await gapi.client.sheets.spreadsheets.values.append({
        spreadsheetId: SPREADSHEET_ID,
        range: SHEET_NAME,
        valueInputOption: 'RAW',
        resource: { values }
    });
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–∫–∏
async function processOrder(message) {
    try {
        // –ó–∞–≥—Ä—É–∑–∫–∞ Google API
        await new Promise((resolve) => {
            gapi.load('client', resolve);
        });

        await authenticate();
        
        const orderData = parseOrderData(message);
        const clientRow = await findClient(orderData.phone);

        if (clientRow !== -1) {
            // –ö–ª–∏–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω - –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
            await updateClient(clientRow, orderData);
            console.log('–î–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω—ã');
        } else {
            // –ù–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç - –¥–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É
            await addClient(orderData);
            console.log('–ù–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç –¥–æ–±–∞–≤–ª–µ–Ω');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞—è–≤–∫–∏:', error);
    }
}

// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
const telegramMessage = `–ë–æ—Ä–∏—Å –ö–µ–π–¥—É–Ω +7 (978) 751-97-92
üí≥ –°—É–º–º–∞ –∑–∞–∫–∞–∑–∞: 2400‚ÇΩ [600‚ÇΩ/–º–µ—Å.]
üõû: 4—à—Ç.‚ù±‚ù±–ë–µ–∑ –¥–∏—Å–∫–æ–≤ ‚ù±‚ù± [–õ–µ—Ç–æ]
–ú–∞—Ä–∫–∞:‚ù±‚ù± Pirelli Cinturato P7 ¬∑ 205/55/R16 ¬∑ –ë–µ–∑ –ª–∞—Ç–æ–∫ ¬∑ 
üóì–•—Ä–∞–Ω–µ–Ω–∏–µ: ‚ù±2024-11-29 ‚ûΩ 2025-03-29
---------------
‚òéÔ∏è –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ–± –æ–∫–æ–Ω—á–∞–Ω–∏–∏ —Å—Ä–æ–∫–∞: 2025-03-22 
---------------
–î–æ–≥–æ–≤–æ—Ä: 24112921 (–Ω–∞ —Å–∞–π—Ç–µ Otelshin.tu) | –°–∫–ª–∞–¥: ABD13`;

// –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ (—Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è)
// processOrder(telegramMessage);

