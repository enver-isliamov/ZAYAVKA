/**
 * –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞ –≤ Google Sheets.
 * –†–∞–±–æ—Ç–∞–µ—Ç —Å –ª–∏—Å—Ç–æ–º "WebBase". –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –Ω–æ–º–µ—Ä –¥–æ–≥–æ–≤–æ—Ä–∞, –µ—Å–ª–∏ –æ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.
 */
async function updateGoogleSheet(clientData) {
    const SHEET_ID = '1QwNDSkkpDp1kBW9H1C3v1gdvlrHc2OS4WR8HVOXZKh0'; // ID —Ç–∞–±–ª–∏—Ü—ã
    const API_KEY = 'AIzaSyBWBa0hhrcGx6rESZeLCXZ7-73U4lJAR0E'; // –í–∞—à API-–∫–ª—é—á
    const SHEET_NAME = 'WebBase'; // –ù–∞–∑–≤–∞–Ω–∏–µ –ª–∏—Å—Ç–∞ –≤ —Ç–∞–±–ª–∏—Ü–µ

    try {
        // 1. –ü–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã (—Å—Ç—Ä–æ–∫–∏ A2:T1000)
        const getResponse = await fetch(
            `https://sheets.googleapis.com/v4/spreadsheets/${SHEET_ID}/values/${SHEET_NAME}!A2:T1000?key=${API_KEY}`
        );
        const sheetData = await getResponse.json();

        let rowIndex = -1; // –ò–Ω–¥–µ–∫—Å —Å—Ç—Ä–æ–∫–∏, –µ—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –Ω–∞–π–¥–µ–Ω

        if (sheetData.values) {
            for (let i = 0; i < sheetData.values.length; i++) {
                const row = sheetData.values[i];
                const nameInRow = row[1] || '';
                const phoneInRow = row[2] || '';

                if (nameInRow === clientData.clientName && phoneInRow === clientData.phone) {
                    rowIndex = i + 2; // +2, —Ç.–∫. A2 ‚Äî –Ω–∞—á–∞–ª–æ
                    break;
                }
            }
        }

        // 2. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–æ–º–µ—Ä–∞ –¥–æ–≥–æ–≤–æ—Ä–∞, –µ—Å–ª–∏ –æ–Ω –Ω–µ —É–∫–∞–∑–∞–Ω
        if (!clientData.contractNumber || clientData.contractNumber.trim() === '') {
            const now = new Date();
            const datePart = now.toISOString().slice(0, 10).replace(/-/g, ''); // YYYYMMDD
            const rand = Math.floor(1000 + Math.random() * 9000); // —Å–ª—É—á–∞–π–Ω–æ–µ 4-–∑–Ω–∞—á–Ω–æ–µ —á–∏—Å–ª–æ
            clientData.contractNumber = `–î–û–ì-${datePart}-${rand}`;
        }

        // 3. –§–æ—Ä–º–∏—Ä—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ –∫–æ–ª–æ–Ω–∫–∞–º A-T (–≤—Å–µ–≥–æ 20 —à—Ç—É–∫)
        const values = [
            clientData.chatId || '',
            clientData.clientName || '',
            clientData.phone || '',
            clientData.carNumber || '',
            clientData.orderQR || '',
            clientData.monthlyPrice || '',
            clientData.tireCount || '',
            clientData.hasDisk || '',
            clientData.startDate || '',
            clientData.term || '',
            clientData.reminderDate || '',
            clientData.endDate || '',
            clientData.storage || '',
            clientData.cell || '',
            clientData.totalPrice || '',
            clientData.debt || '',
            clientData.contractNumber || '',
            clientData.clientAddress || '',
            clientData.dealStatus || '',
            clientData.trafficSource || ''
        ];

        if (rowIndex > 0) {
            // 4. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Å—Ç—Ä–æ–∫–∏
            const updateRange = `${SHEET_NAME}!A${rowIndex}:T${rowIndex}`;
            const updateResponse = await fetch(
                `https://sheets.googleapis.com/v4/spreadsheets/${SHEET_ID}/values/${encodeURIComponent(updateRange)}?valueInputOption=USER_ENTERED&key=${API_KEY}`,
                {
                    method: 'PUT',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        range: updateRange,
                        majorDimension: 'ROWS',
                        values: [values]
                    })
                }
            );

            if (updateResponse.ok) {
                console.log(`‚úÖ –î–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω—ã: ${clientData.clientName}`);
            } else {
                console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:', await updateResponse.text());
            }
        } else {
            // 5. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏
            const appendRange = `${SHEET_NAME}!A2:T2`;
            const appendResponse = await fetch(
                `https://sheets.googleapis.com/v4/spreadsheets/${SHEET_ID}/values/${encodeURIComponent(appendRange)}:append?valueInputOption=USER_ENTERED&insertDataOption=INSERT_ROWS&key=${API_KEY}`,
                {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ values: [values] })
                }
            );

            if (appendResponse.ok) {
                console.log(`üÜï –ù–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç –¥–æ–±–∞–≤–ª–µ–Ω: ${clientData.clientName}`);
            } else {
                console.error('‚ùå –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è:', await appendResponse.text());
            }
        }
    } catch (error) {
        console.error('‚ö†Ô∏è –û—à–∏–±–∫–∞ —Ä–∞–±–æ—Ç—ã —Å —Ç–∞–±–ª–∏—Ü–µ–π:', error);
        alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å —Ç–∞–±–ª–∏—Ü–µ–π. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ API-–∫–ª—é—á –∏ –¥–æ—Å—Ç—É–ø—ã.');
    }
}
